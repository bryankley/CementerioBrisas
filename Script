create database CementerioBrisass
USE [CementerioBrisass]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[asignacion_mantenimiento](
	[id_asignacion] [int] NOT NULL,
	[fecha_inicio] [date] NULL,
	[fecha_cierre] [date] NULL,
	[id_empleadopk] [int] NULL,
	[id_tumbapk] [int] NULL,
	[id_mantenimientopk] [int] NULL,
 CONSTRAINT [PK_asignacion_mantenimiento] PRIMARY KEY CLUSTERED 
(
	[id_asignacion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[categoria_empleado](
	[id_categoria] [int] NOT NULL,
	[descripcion] [varchar](50) NULL,
 CONSTRAINT [PK_categoria_empleado] PRIMARY KEY CLUSTERED 
(
	[id_categoria] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[certificado_defuncion](
	[id_certificado] [int] NOT NULL,
	[fecha_fallecimiento] [date] NULL,
	[causa_fallecimiento] [varchar](70) NULL,
	[id_fallecidopk] [int] NULL,
	[id_familiarpk] [int] NULL,
 CONSTRAINT [PK_certificado_defuncion] PRIMARY KEY CLUSTERED 
(
	[id_certificado] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[compra_panteon](
	[id_panteon] [int] NOT NULL,
	[precio] [decimal](6, 2) NULL,
	[id_tumbapk] [int] NULL,
	[id_familiarpk] [int] NULL,
	[id_tiposectorpk] [int] NULL,
 CONSTRAINT [PK_compra_panteon] PRIMARY KEY CLUSTERED 
(
	[id_panteon] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[detalle_reubicacion](
	[id_reubicacion] [int] NOT NULL,
	[fecha_reubicacion] [date] NULL,
	[precio] [decimal](6, 2) NULL,
	[id_tumbapk] [int] NULL,
	[id_tipofpk] [int] NULL,
 CONSTRAINT [PK_detalle_reubicacion] PRIMARY KEY CLUSTERED 
(
	[id_reubicacion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[empleado](
	[id_empleado] [int] NOT NULL,
	[cedula_e] [int] NULL,
	[nombres_e] [varchar](50) NULL,
	[apellidos_e] [varchar](50) NULL,
	[telefono] [int] NULL,
	[salario] [decimal](6, 2) NULL,
	[antiguedad] [varchar](20) NULL,
	[idcategoriapk] [int] NULL,
 CONSTRAINT [PK_empleado] PRIMARY KEY CLUSTERED 
(
	[id_empleado] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[fallecido](
	[id_fallecido] [int] NOT NULL,
	[nombre] [varchar](50) NULL,
	[apellido] [varchar](50) NULL,
	[edad] [int] NULL,
 CONSTRAINT [PK_fallecido] PRIMARY KEY CLUSTERED 
(
	[id_fallecido] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[familiar](
	[id_familiar] [int] NOT NULL,
	[cedula] [int] NULL,
	[nombres] [varchar](50) NULL,
	[apellidos] [varchar](50) NULL,
	[direccion] [varchar](60) NULL,
	[telefono] [int] NULL,
	[correo] [varchar](50) NULL,
 CONSTRAINT [PK_familiar] PRIMARY KEY CLUSTERED 
(
	[id_familiar] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[mantenimiento](
	[id_mantenimiento] [int] NOT NULL,
	[descripcion _mantenimiento] [varchar](70) NULL,
 CONSTRAINT [PK_mantenimiento] PRIMARY KEY CLUSTERED 
(
	[id_mantenimiento] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[servicios](
	[id_servicios] [int] NOT NULL,
	[tipo_servicio] [varchar](50) NULL,
	[precio_servicio] [decimal](6, 2) NULL,
 CONSTRAINT [PK_servicios] PRIMARY KEY CLUSTERED 
(
	[id_servicios] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[servicios_prestados](
	[id_servicioprestado] [int] NOT NULL,
	[descripcion_servicio] [varchar](50) NULL,
	[fecha] [date] NULL,
	[id_tumbapk] [int] NULL,
	[id_fallecidopk] [int] NULL,
	[id_empleadopk] [int] NULL,
	[id_serviciospk] [int] NULL,
	[id_tipofpk] [int] NULL,
 CONSTRAINT [PK_servicios_prestados] PRIMARY KEY CLUSTERED 
(
	[id_servicioprestado] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tipo_familiar](
	[id_tipoF] [int] NOT NULL,
	[descripcion] [varchar](50) NULL,
	[id_familiarpk] [int] NULL,
	[id_fallecidopk] [int] NULL,
 CONSTRAINT [PK_tipo_familiar] PRIMARY KEY CLUSTERED 
(
	[id_tipoF] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tipo_sector](
	[id_tiposector] [int] NOT NULL,
	[descripcion_sector] [varchar](70) NULL,
	[totalNumero_tumbas] [int] NULL,
 CONSTRAINT [PK_tipo_sector] PRIMARY KEY CLUSTERED 
(
	[id_tiposector] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tipo_tumba](
	[id_tipotumba] [int] NOT NULL,
	[descripcion_tumba] [varchar](60) NULL,
 CONSTRAINT [PK_tipo_tumba] PRIMARY KEY CLUSTERED 
(
	[id_tipotumba] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tumba](
	[id_tumba] [int] NOT NULL,
	[capacidad] [varchar](50) NULL,
	[extension] [varchar](50) NULL,
	[manzana] [varchar](50) NULL,
	[id_tipotumbapk] [int] NULL,
	[id_tiposectorpk] [int] NULL,
 CONSTRAINT [PK_tumba] PRIMARY KEY CLUSTERED 
(
	[id_tumba] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [dbo].[asignacion_mantenimiento]  WITH CHECK ADD  CONSTRAINT [FK_asignacion_mantenimiento_empleado] FOREIGN KEY([id_empleadopk])
REFERENCES [dbo].[empleado] ([id_empleado])
GO
ALTER TABLE [dbo].[asignacion_mantenimiento] CHECK CONSTRAINT [FK_asignacion_mantenimiento_empleado]
GO
ALTER TABLE [dbo].[asignacion_mantenimiento]  WITH CHECK ADD  CONSTRAINT [FK_asignacion_mantenimiento_mantenimiento] FOREIGN KEY([id_mantenimientopk])
REFERENCES [dbo].[mantenimiento] ([id_mantenimiento])
GO
ALTER TABLE [dbo].[asignacion_mantenimiento] CHECK CONSTRAINT [FK_asignacion_mantenimiento_mantenimiento]
GO
ALTER TABLE [dbo].[asignacion_mantenimiento]  WITH CHECK ADD  CONSTRAINT [FK_asignacion_mantenimiento_tumba] FOREIGN KEY([id_tumbapk])
REFERENCES [dbo].[tumba] ([id_tumba])
GO
ALTER TABLE [dbo].[asignacion_mantenimiento] CHECK CONSTRAINT [FK_asignacion_mantenimiento_tumba]
GO
ALTER TABLE [dbo].[certificado_defuncion]  WITH CHECK ADD  CONSTRAINT [FK_certificado_defuncion_fallecido] FOREIGN KEY([id_fallecidopk])
REFERENCES [dbo].[fallecido] ([id_fallecido])
GO
ALTER TABLE [dbo].[certificado_defuncion] CHECK CONSTRAINT [FK_certificado_defuncion_fallecido]
GO
ALTER TABLE [dbo].[certificado_defuncion]  WITH CHECK ADD  CONSTRAINT [FK_certificado_defuncion_familiar] FOREIGN KEY([id_familiarpk])
REFERENCES [dbo].[familiar] ([id_familiar])
GO
ALTER TABLE [dbo].[certificado_defuncion] CHECK CONSTRAINT [FK_certificado_defuncion_familiar]
GO
ALTER TABLE [dbo].[compra_panteon]  WITH CHECK ADD  CONSTRAINT [FK_compra_panteon_familiar] FOREIGN KEY([id_familiarpk])
REFERENCES [dbo].[familiar] ([id_familiar])
GO
ALTER TABLE [dbo].[compra_panteon] CHECK CONSTRAINT [FK_compra_panteon_familiar]
GO
ALTER TABLE [dbo].[compra_panteon]  WITH CHECK ADD  CONSTRAINT [FK_compra_panteon_tipo_sector] FOREIGN KEY([id_tiposectorpk])
REFERENCES [dbo].[tipo_sector] ([id_tiposector])
GO
ALTER TABLE [dbo].[compra_panteon] CHECK CONSTRAINT [FK_compra_panteon_tipo_sector]
GO
ALTER TABLE [dbo].[compra_panteon]  WITH CHECK ADD  CONSTRAINT [FK_compra_panteon_tumba] FOREIGN KEY([id_tumbapk])
REFERENCES [dbo].[tumba] ([id_tumba])
GO
ALTER TABLE [dbo].[compra_panteon] CHECK CONSTRAINT [FK_compra_panteon_tumba]
GO
ALTER TABLE [dbo].[detalle_reubicacion]  WITH CHECK ADD  CONSTRAINT [FK_detalle_reubicacion_tipo_familiar] FOREIGN KEY([id_tipofpk])
REFERENCES [dbo].[tipo_familiar] ([id_tipoF])
GO
ALTER TABLE [dbo].[detalle_reubicacion] CHECK CONSTRAINT [FK_detalle_reubicacion_tipo_familiar]
GO
ALTER TABLE [dbo].[detalle_reubicacion]  WITH CHECK ADD  CONSTRAINT [FK_detalle_reubicacion_tumba] FOREIGN KEY([id_tumbapk])
REFERENCES [dbo].[tumba] ([id_tumba])
GO
ALTER TABLE [dbo].[detalle_reubicacion] CHECK CONSTRAINT [FK_detalle_reubicacion_tumba]
GO
ALTER TABLE [dbo].[empleado]  WITH CHECK ADD  CONSTRAINT [FK_empleado_categoria_empleado] FOREIGN KEY([idcategoriapk])
REFERENCES [dbo].[categoria_empleado] ([id_categoria])
GO
ALTER TABLE [dbo].[empleado] CHECK CONSTRAINT [FK_empleado_categoria_empleado]
GO
ALTER TABLE [dbo].[servicios_prestados]  WITH CHECK ADD  CONSTRAINT [FK_servicios_prestados_empleado] FOREIGN KEY([id_empleadopk])
REFERENCES [dbo].[empleado] ([id_empleado])
GO
ALTER TABLE [dbo].[servicios_prestados] CHECK CONSTRAINT [FK_servicios_prestados_empleado]
GO
ALTER TABLE [dbo].[servicios_prestados]  WITH CHECK ADD  CONSTRAINT [FK_servicios_prestados_fallecido] FOREIGN KEY([id_fallecidopk])
REFERENCES [dbo].[fallecido] ([id_fallecido])
GO
ALTER TABLE [dbo].[servicios_prestados] CHECK CONSTRAINT [FK_servicios_prestados_fallecido]
GO
ALTER TABLE [dbo].[servicios_prestados]  WITH CHECK ADD  CONSTRAINT [FK_servicios_prestados_servicios] FOREIGN KEY([id_serviciospk])
REFERENCES [dbo].[servicios] ([id_servicios])
GO
ALTER TABLE [dbo].[servicios_prestados] CHECK CONSTRAINT [FK_servicios_prestados_servicios]
GO
ALTER TABLE [dbo].[servicios_prestados]  WITH CHECK ADD  CONSTRAINT [FK_servicios_prestados_tipo_familiar] FOREIGN KEY([id_tipofpk])
REFERENCES [dbo].[tipo_familiar] ([id_tipoF])
GO
ALTER TABLE [dbo].[servicios_prestados] CHECK CONSTRAINT [FK_servicios_prestados_tipo_familiar]
GO
ALTER TABLE [dbo].[servicios_prestados]  WITH CHECK ADD  CONSTRAINT [FK_servicios_prestados_tumba] FOREIGN KEY([id_tumbapk])
REFERENCES [dbo].[tumba] ([id_tumba])
GO
ALTER TABLE [dbo].[servicios_prestados] CHECK CONSTRAINT [FK_servicios_prestados_tumba]
GO
ALTER TABLE [dbo].[tipo_familiar]  WITH CHECK ADD  CONSTRAINT [FK_tipo_familiar_fallecido] FOREIGN KEY([id_fallecidopk])
REFERENCES [dbo].[fallecido] ([id_fallecido])
GO
ALTER TABLE [dbo].[tipo_familiar] CHECK CONSTRAINT [FK_tipo_familiar_fallecido]
GO
ALTER TABLE [dbo].[tipo_familiar]  WITH CHECK ADD  CONSTRAINT [FK_tipo_familiar_familiar] FOREIGN KEY([id_familiarpk])
REFERENCES [dbo].[familiar] ([id_familiar])
GO
ALTER TABLE [dbo].[tipo_familiar] CHECK CONSTRAINT [FK_tipo_familiar_familiar]
GO
ALTER TABLE [dbo].[tumba]  WITH CHECK ADD  CONSTRAINT [FK_tumba_tipo_sector] FOREIGN KEY([id_tiposectorpk])
REFERENCES [dbo].[tipo_sector] ([id_tiposector])
GO
ALTER TABLE [dbo].[tumba] CHECK CONSTRAINT [FK_tumba_tipo_sector]
GO
ALTER TABLE [dbo].[tumba]  WITH CHECK ADD  CONSTRAINT [FK_tumba_tipo_tumba] FOREIGN KEY([id_tipotumbapk])
REFERENCES [dbo].[tipo_tumba] ([id_tipotumba])
GO
ALTER TABLE [dbo].[tumba] CHECK CONSTRAINT [FK_tumba_tipo_tumba]
GO


-- Consultas 1: Un empleado en cuantas exhumaciones ha estado --
	select f.nombresf as nombre_fallecido, e.tipo_servicio, e.precio_servicio, o.nombres_e as empleado, s.fecha
	from servicio_prestados s 
	inner join  servicio e on s.idserviciopk=e.id_servicio 
	inner join empleado o  on o.cedula_empl= s.cedula_emplpk 
	inner join fallecido f on f.id_fallecido= s.idfallecidopk where id_servicio=1 and  nombres_e= 'Leo'
	select count(tipo_servicio ) as total_Exhumaciones from servicio_prestados s 
	inner join servicio on id_servicio=s.idserviciopk 
	inner join empleado on cedula_empl=s.cedula_emplpk where nombres_e= 'Leo' and id_servicio=1

-- Consulta 2: Numero de tipo de tramites que se ha emitido en el cementerio --
	select  tipo_servicio
	from servicio_prestados s 
	inner join  servicio on id_servicio=s.idserviciopk order by tipo_servicio desc
	select count(tipo_servicio) as total_tramites from servicio_prestados s 
	inner join servicio on id_servicio=s.idserviciopk

-- Consulta 3: Saber los dueños de distintos lugares --
	select f.nombres,t.nombre_tumba ,c.precio,s.descripcion_sec
	from compra_panteones c 
	inner join tipo_tumba t on c.idtipopk=t.id_tipo 
	inner join sector s on s.id_sector= c.idsectorpk 
	inner join familiar f on f.cedula= c.cedulapk order by f.nombres asc

-- Consulta 4: Consulta por fecha de muerte de forma descendente , nombres del fallecido  y  la causa de fallecimiento --
	select  c.fecha_fallecimiento,f.nombresf, c.causa_fallecimiento
	from certificado_defuncion c  
	inner join  fallecido f on c.idfallecidopk = f.id_fallecido order by c.fecha_fallecimiento desc
